knitr::opts_chunk$set(echo=TRUE)
knitr::opts_knit$set(root.dir = 'eg_data/NHANES')
keepnames2_mult <- keepnames2[keepnames2 %in% freqtable2_m$SEQN] # 6,869
main_wd <- "~/GitHub/DietDiveR"
library(foreign)
source("lib/specify_data_dir.R")
source("lib/load_clean_NHANES.R")
source("lib/add_gender_and_age.R")
knitr::opts_chunk$set(echo=TRUE)
knitr::opts_knit$set(root.dir = 'eg_data/NHANES')
QCtotal_d <- read.table("Total_D12_FC_QC_mean_QC_demo.txt", sep="\t", header=T)
length(unique(QCtotal_d$SEQN))
AddGenderAgeGroups(input=QCtotal_d, age.col="RIDAGEYR", gender.col="RIAGENDR")
QCtotal_d_ga <- totals_out
head(QCtotal_d_ga[, c("RIAGENDR", "Gender", "RIDAGEYR", "AgeGroup", "Gender_Age")])
table(QCtotal_d_ga$Gender_Age)
table(QCtotal_d_ga$AgeGroup)
bodymea <- read.xport("Raw_data/BMX_I.XPT")
QCtotal_d_ga_body <- merge(x=QCtotal_d_ga, y=bodymea, by="SEQN")
metadata_raw <- read.xport("Raw_data/DR1TOT_I.XPT")
sta_col_num_a <- match("DBQ095Z"  , names(metadata_raw))  # Salt-related questions
end_col_num_a <- match("DRQSPREP" , names(metadata_raw))
sta_col_num_b <- match("DRQSDIET" , names(metadata_raw))  # Diet-related questions
end_col_num_b <- match("DRQSDT91" , names(metadata_raw))
sta_col_num_c <- match("DRD340"   , names(metadata_raw))  # Fish-related questions
end_col_num_c <- match("DRD370V"  , names(metadata_raw))
metadata_only <- metadata_raw[, c(1,
sta_col_num_a:end_col_num_a,
sta_col_num_b:end_col_num_b,
sta_col_num_c:end_col_num_c
)]
colnames(metadata_only)
QCtotal_d_ga_body_meta <- merge(x=QCtotal_d_ga_body, y=metadata_only, by="SEQN")
QCtotal_d_ga_body_meta <- merge(x=QCtotal_d_ga_body, y=metadata_only, by="SEQN")
QCtotal_d_ga_body_meta <- merge(x=QCtotal_d_ga_body, y=metadata_only, by="SEQN")
write.table(QCtotal_d_ga_body_meta, "Total_D12_FC_QC_mean_QC_demo_ga_body_meta.txt",
sep="\t", row.names=F, quote=F)
QCtotal_d_ga_body_meta <- merge(x=QCtotal_d_ga_body, y=metadata_only, by="SEQN")
nrow(QCtotal_d_ga_body_meta_glu_comp)
main_wd <- "~/GitHub/DietDiveR"
library(foreign)
source("lib/specify_data_dir.R")
source("lib/load_clean_NHANES.R")
source("lib/add_gender_and_age.R")
knitr::opts_chunk$set(echo=TRUE)
knitr::opts_knit$set(root.dir = 'eg_data/NHANES')
QCtotal_d <- read.table("Total_D12_FC_QC_mean_QC_demo.txt", sep="\t", header=T)
length(unique(QCtotal_d$SEQN))
AddGenderAgeGroups(input=QCtotal_d, age.col="RIDAGEYR", gender.col="RIAGENDR")
QCtotal_d_ga <- totals_out
head(QCtotal_d_ga[, c("RIAGENDR", "Gender", "RIDAGEYR", "AgeGroup", "Gender_Age")])
table(QCtotal_d_ga$Gender_Age)
table(QCtotal_d_ga$AgeGroup)
bodymea <- read.xport("Raw_data/BMX_I.XPT")
QCtotal_d_ga_body <- merge(x=QCtotal_d_ga, y=bodymea, by="SEQN")
metadata_raw <- read.xport("Raw_data/DR1TOT_I.XPT")
sta_col_num_a <- match("DBQ095Z"  , names(metadata_raw))  # Salt-related questions
end_col_num_a <- match("DRQSPREP" , names(metadata_raw))
sta_col_num_b <- match("DRQSDIET" , names(metadata_raw))  # Diet-related questions
end_col_num_b <- match("DRQSDT91" , names(metadata_raw))
sta_col_num_c <- match("DRD340"   , names(metadata_raw))  # Fish-related questions
end_col_num_c <- match("DRD370V"  , names(metadata_raw))
metadata_only <- metadata_raw[, c(1,
sta_col_num_a:end_col_num_a,
sta_col_num_b:end_col_num_b,
sta_col_num_c:end_col_num_c
)]
colnames(metadata_only)
QCtotal_d_ga_body_meta <- merge(x=QCtotal_d_ga_body, y=metadata_only, by="SEQN")
write.table(QCtotal_d_ga_body_meta, "Total_D12_FC_QC_mean_QC_demo_ga_body_meta.txt",
sep="\t", row.names=F, quote=F)
glu <- read.xport("Raw_data/GLU_I.XPT")
head(glu)
hist(glu$LBXGLU)
QCtotal_d_ga_body_meta_glu <- merge(x=QCtotal_d_ga_body_meta, y=glu, by="SEQN")
QCtotal_d_ga_body_meta_glu$GLU_index <- ifelse(
# test sentence
is.na(QCtotal_d_ga_body_meta_glu$LBXGLU) == TRUE,
# if LBXGLU is NA, put NA to GLU_index column.
NA,
# Otherwise, put "Normal", "Prediabetic" or "Diabetic" to GLU_index column.
ifelse(QCtotal_d_ga_body_meta_glu$LBXGLU < 100,
"Normal",
ifelse(QCtotal_d_ga_body_meta_glu$LBXGLU < 126,
"Prediabetic",
"Diabetic"))
)
QCtotal_d_ga_body_meta_glu[1:30, c("LBXGLU", "GLU_index")]
table(QCtotal_d_ga_body_meta_glu$GLU_index, useNA="always")
QCtotal_d_ga_body_meta_glu_comp <-  QCtotal_d_ga_body_meta_glu[!is.na(QCtotal_d_ga_body_meta_glu$LBXGLU), ]
nrow(QCtotal_d_ga_body_meta_glu_comp)
main_wd <- "~/GitHub/DietDiveR"
source("lib/specify_data_dir.R")
source("lib/ggplot2themes.R")
knitr::opts_chunk$set(echo=TRUE)
knitr::opts_knit$set(root.dir = 'eg_data/NHANES/Laboratory_data/')
glu_2 <- read.table( file="QCtotal_d_ga_body_meta_glu_comp_2.txt", sep= "\t", header= T )
glu_2$GLU_index <- factor(glu_2$GLU_index, levels = c("Normal", "Prediabetic", "Diabetic"))
summary(glu_2$BMXBMI)
colSums(is.na(glu_2[, c("SEQN", "BMXBMI")]))
BMIfreq <- ggplot(data=glu_2, aes(x=BMXBMI, group=GLU_index, fill=GLU_index)) +
geom_density(adjust=1.5, alpha=.4) + space_axes + no_grid +
scale_fill_manual(values= c("steelblue3", "yellow", "hotpink") ) +
labs(x="BMI", y="Density")
ggsave("QCtotal_d_ga_body_meta_glu_comp_2_n1597_BMI_by_GLU_index.pdf",
BMIfreq, device="pdf", width=5.3, height=4.5)
main_wd <- "~/GitHub/DietDiveR"
source("lib/specify_data_dir.R")
source("lib/prep_data_for_clustering.R")
knitr::opts_chunk$set(echo=TRUE)
knitr::opts_knit$set(root.dir = 'eg_data/NHANES/Laboratory_data/')
dim(totals_males60to79)
totals_males60to79 <- read.table("QCtotal_d_ga_body_meta_glu_comp_2_males60to79.txt",
sep="\t", header=T)
dim(totals_males60to79)
main_wd <- "~/GitHub/DietDiveR"
source("lib/specify_data_dir.R")
PrepForClustering(input_df = user_BMI_nut,
userID = "SEQN",
original_totals_df= totals_males60to79,
complete_cases_fn=   "QCtotal_d_ga_body_meta_glu_comp_2_males60to79_c_Nut.txt",
clustering_input_fn= "QCtotal_d_ga_body_meta_glu_comp_2_males60to79_c_Nut_rv.txt",
corr_matrix_fn=      "QCtotal_d_ga_body_meta_glu_comp_2_males60to79_c_Nut_corr_mat.txt",
rm_corr_var = TRUE)
user_BMI_nut <- totals_males60to79_2[ , c(SEQN_col, BMI_col, start_col:end_col)]
main_wd <- "~/GitHub/DietDiveR"
source("lib/specify_data_dir.R")
main_wd <- "~/GitHub/DietDiveR"
source("lib/specify_data_dir.R")
PrepForClustering(input_df = user_BMI_nut,
userID = "SEQN",
original_totals_df= totals_males60to79,
complete_cases_fn=   "QCtotal_d_ga_body_meta_glu_comp_2_males60to79_c_Nut.txt",
clustering_input_fn= "QCtotal_d_ga_body_meta_glu_comp_2_males60to79_c_Nut_rv.txt",
corr_matrix_fn=      "QCtotal_d_ga_body_meta_glu_comp_2_males60to79_c_Nut_corr_mat.txt",
rm_corr_var = TRUE)
main_wd <- "~/GitHub/DietDiveR"
source("lib/specify_data_dir.R")
setwd("~/GitHub/DietDiveR")
# Name your main directory for future use.
main_wd <- file.path(getwd())
setwd("~/GitHub/DietDiveR")
# Name your main directory for future use.
main_wd <- file.path(getwd())
# ---------------------------------------------------------------------------------------------------------------
# Install the BiocManager package necessary for installing the phyloseq package.
if (!require("BiocManager",    quietly = TRUE))install.packages("BiocManager")
# ---------------------------------------------------------------------------------------------------------------
# load the necessary packages and the source code.
library(vegan)
library(phyloseq)
library(ggplot2)
library(ggtree) # Shows how to cite the ggtree package. Make sure to cite it accordingly.
library(cluster) # necessary to the "pairwiseAdonis" package.
library(pairwiseAdonis)
source("lib/specify_data_dir.R")
source("lib/ordination.R")
source("lib/ggplot2themes.R")
source("lib/sort_IFC_by_ID.R")
source("lib/plot.axis.1to4.by.factor.R")
# Load the distinct 100 colors for use.
distinct100colors <- readRDS("lib/distinct100colors.rda")
# You can come back to the main directory by:
setwd(main_wd)
# Set working directory.
SpecifyDataDirectory("eg_data/NHANES/Laboratory_data/")
# Food
# Load IFC table, and sort the columnnames (userID), leaving the last column (taxonomy) intact.
# This dataframe will be saved as "food".
# Also, save "food" as a .txt file to be used in the "correlation between Axes and foods" section.
SortIFCByID(ifc.input =           "Foodtree/Food_D12_FC_QC_demo_QCed_males60to79_3Lv.food.ifc.txt",
outfn.for.corr.axis = "Foodtree/Food_D12_FC_QC_demo_QCed_males60to79_3Lv.food.ifc_sorted.txt")
# "food" is a matrix of Food descriptions (rows) x SampleID (columns).
# The column name of "food" is the ordered SEQNs preceded with an 'X'.
head(food)[1:6, 1:4]
# Format the food file and create an ifc_table called IFC.
PrepFood(data = food)
# Taxonomy (tax)
# Load taxonomy file generated by the MakeFoodTree function.
tax <- read.delim("Foodtree/Food_D12_FC_QC_demo_QCed_males60to79_3Lv.tax.txt")
# Format the tax file and create a taxonomy table called TAX.
PrepTax(data=tax)
# Sample
# Load the demographics data.
demog <- read.xport("../Raw_data/DEMO_I.XPT")
main_wd <- "~/GitHub/DietDiveR"
library(vegan)
library(reshape2)
library(data.tree)
source("lib/specify_data_dir.R")
source("lib/diversity_nth_tile.R")
# Load source scripts to build foodtrees and IFC tables.
source("lib/specify_data_dir.R")
source("lib/Food_tree_scripts/newick.tree.r")
source("lib/Food_tree_scripts/make.food.tree.r")
source("lib/Food_tree_scripts/make.food.ifc.r")
source("lib/Food_tree_scripts/make.fiber.ifc.r")
source("lib/Food_tree_scripts/make.dhydrt.ifc.r")
knitr::opts_chunk$set(echo=TRUE)
knitr::opts_knit$set(root.dir = 'eg_data/NHANES/')
main_wd <- "~/GitHub/DietDiveR"
library(vegan)
library(reshape2)
library(data.tree)
source("lib/specify_data_dir.R")
nrow(totals)
totals <- read.delim("Total_D12_FC_QC_mean_QC_demo_ga_body_meta.txt")
nrow(totals)
